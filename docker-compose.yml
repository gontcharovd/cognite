version: '3.8'
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.0.0-python3.8
  build:
    context: pipeline/docker
    dockerfile: Dockerfile
  env_file:
    - airflow.env
  volumes:
    - ./pipeline/airflow/dags:/opt/airflow/dags
    - ./pipeline/airflow/logs:/opt/airflow/logs
    - ./pipeline/airflow/plugins:/opt/airflow/plugins
    - ./pipeline/airflow/tmp:/opt/airflow/tmp
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    airflow-postgres:
      condition: service_healthy

services:
  # dashboard:
  #   image: gontcharovd/ccp-dashboard:latest
  #   ports:
  #     - 3838:3838
  #   network_mode: host
  #   env_file: 
  #     - .env
  #   depends_on:
  #     airflow-postgres:
  #       condition: service_healthy
  
  application-db:
    image: postgres:13
    env_file: 
      - application-db.env
    volumes:
      - ./database/postgresql/data:/var/lib/postgresql/data
      - ./database/db-init.sh:/docker-entrypoint-initdb.d/db-init.sh
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "cognite"]
      interval: 5s
      retries: 5
    restart: always

  airflow-postgres:
    image: postgres:13
    env_file: 
      - airflow.env
    volumes:
      - ./pipeline/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-init:
    <<: *airflow-common
    command: bash setup.sh

volumes:
  postgres-db-volume:
